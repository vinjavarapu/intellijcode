<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="4" total="14" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="example suite 1" duration-ms="51498" started-at="2022-02-19T18:51:03 IST" finished-at="2022-02-19T18:51:55 IST">
    <groups>
    </groups>
    <test name="Regression suite 1" duration-ms="51498" started-at="2022-02-19T18:51:03 IST" finished-at="2022-02-19T18:51:55 IST">
      <class name="Projects.ProjectProperties">
        <test-method status="PASS" signature="LaunchArtemisURL()[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="LaunchArtemisURL" is-config="true" duration-ms="2182" started-at="2022-02-19T18:51:32 IST" finished-at="2022-02-19T18:51:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchArtemisURL -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="BeforeMethod" is-config="true" duration-ms="49" started-at="2022-02-19T18:51:34 IST" finished-at="2022-02-19T18:51:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Projects.ProjectProperties.fetchprojecttitle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="fetchprojecttitle()[pri:1, instance:Projects.ProjectProperties@5700d6b1]" name="fetchprojecttitle" duration-ms="14489" started-at="2022-02-19T18:51:34 IST" finished-at="2022-02-19T18:51:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchprojecttitle -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="BeforeMethod" is-config="true" duration-ms="31" started-at="2022-02-19T18:51:48 IST" finished-at="2022-02-19T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Projects.ProjectProperties.ClickProject()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="ClickProject()[pri:2, instance:Projects.ProjectProperties@5700d6b1]" name="ClickProject" duration-ms="87" started-at="2022-02-19T18:51:48 IST" finished-at="2022-02-19T18:51:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickProject -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="BeforeMethod" is-config="true" duration-ms="32" started-at="2022-02-19T18:51:48 IST" finished-at="2022-02-19T18:51:48 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Projects.ProjectProperties.getProjectClassification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="getProjectClassification()[pri:3, instance:Projects.ProjectProperties@5700d6b1]" name="getProjectClassification" duration-ms="449" started-at="2022-02-19T18:51:48 IST" finished-at="2022-02-19T18:51:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProjectClassification -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="BeforeMethod" is-config="true" duration-ms="37" started-at="2022-02-19T18:51:49 IST" finished-at="2022-02-19T18:51:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Projects.ProjectProperties.getProjectDetailsContent() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="getProjectDetailsContent()[pri:4, instance:Projects.ProjectProperties@5700d6b1]" name="getProjectDetailsContent" duration-ms="5108" started-at="2022-02-19T18:51:49 IST" finished-at="2022-02-19T18:51:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProjectDetailsContent -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="BeforeMethod" is-config="true" duration-ms="29" started-at="2022-02-19T18:51:54 IST" finished-at="2022-02-19T18:51:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Projects.ProjectProperties.closeProjectDetailsContent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="closeProjectDetailsContent()[pri:5, instance:Projects.ProjectProperties@5700d6b1]" name="closeProjectDetailsContent" duration-ms="52" started-at="2022-02-19T18:51:54 IST" finished-at="2022-02-19T18:51:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeProjectDetailsContent -->
        <test-method status="PASS" signature="QuitWindows()[pri:0, instance:Projects.ProjectProperties@5700d6b1]" name="QuitWindows" is-config="true" duration-ms="730" started-at="2022-02-19T18:51:54 IST" finished-at="2022-02-19T18:51:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitWindows -->
      </class> <!-- Projects.ProjectProperties -->
      <class name="Login.LoginInvalid">
        <test-method status="PASS" signature="LaunchArtemisURL()[pri:0, instance:Login.LoginInvalid@1ce92674]" name="LaunchArtemisURL" is-config="true" duration-ms="1944" started-at="2022-02-19T18:51:14 IST" finished-at="2022-02-19T18:51:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchArtemisURL -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Login.LoginInvalid@1ce92674]" name="BeforeMethod" is-config="true" duration-ms="34" started-at="2022-02-19T18:51:16 IST" finished-at="2022-02-19T18:51:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.LoginInvalid.EnterWrongemailid() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="EnterWrongemailid()[pri:0, instance:Login.LoginInvalid@1ce92674]" name="EnterWrongemailid" duration-ms="5304" started-at="2022-02-19T18:51:16 IST" finished-at="2022-02-19T18:51:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterWrongemailid -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Login.LoginInvalid@1ce92674]" name="BeforeMethod" is-config="true" duration-ms="25" started-at="2022-02-19T18:51:22 IST" finished-at="2022-02-19T18:51:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.LoginInvalid.wrongpassword() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="wrongpassword()[pri:0, instance:Login.LoginInvalid@1ce92674]" name="wrongpassword" duration-ms="9381" started-at="2022-02-19T18:51:22 IST" finished-at="2022-02-19T18:51:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongpassword -->
        <test-method status="PASS" signature="QuitWindows()[pri:0, instance:Login.LoginInvalid@1ce92674]" name="QuitWindows" is-config="true" duration-ms="693" started-at="2022-02-19T18:51:31 IST" finished-at="2022-02-19T18:51:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitWindows -->
      </class> <!-- Login.LoginInvalid -->
      <class name="Login.Login_Test">
        <test-method status="PASS" signature="BeforeTestMethod()[pri:0, instance:Login.Login_Test@7085bdee]" name="BeforeTestMethod" is-config="true" duration-ms="86" started-at="2022-02-19T18:51:03 IST" finished-at="2022-02-19T18:51:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestMethod -->
        <test-method status="PASS" signature="LaunchArtemisURL()[pri:0, instance:Login.Login_Test@7085bdee]" name="LaunchArtemisURL" is-config="true" duration-ms="3199" started-at="2022-02-19T18:51:04 IST" finished-at="2022-02-19T18:51:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchArtemisURL -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Login.Login_Test@7085bdee]" name="BeforeMethod" is-config="true" duration-ms="227" started-at="2022-02-19T18:51:07 IST" finished-at="2022-02-19T18:51:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.Login_Test.Login_HomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="Login_HomePage()[pri:1, instance:Login.Login_Test@7085bdee]" name="Login_HomePage" duration-ms="35" started-at="2022-02-19T18:51:07 IST" description="Check the Login page title" finished-at="2022-02-19T18:51:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login_HomePage -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Login.Login_Test@7085bdee]" name="BeforeMethod" is-config="true" duration-ms="38" started-at="2022-02-19T18:51:07 IST" finished-at="2022-02-19T18:51:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.Login_Test.LogintoApp() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="LogintoApp()[pri:2, instance:Login.Login_Test@7085bdee]" name="LogintoApp" duration-ms="6437" started-at="2022-02-19T18:51:07 IST" description="Verify Login to application with valid details" finished-at="2022-02-19T18:51:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogintoApp -->
        <test-method status="PASS" signature="BeforeMethod(java.lang.reflect.Method)[pri:0, instance:Login.Login_Test@7085bdee]" name="BeforeMethod" is-config="true" duration-ms="44" started-at="2022-02-19T18:51:13 IST" finished-at="2022-02-19T18:51:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Login.Login_Test.Loginsuccesful()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="Loginsuccesful()[pri:3, instance:Login.Login_Test@7085bdee]" name="Loginsuccesful" duration-ms="7" started-at="2022-02-19T18:51:14 IST" finished-at="2022-02-19T18:51:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Loginsuccesful -->
        <test-method status="PASS" signature="QuitWindows()[pri:0, instance:Login.Login_Test@7085bdee]" name="QuitWindows" is-config="true" duration-ms="699" started-at="2022-02-19T18:51:14 IST" finished-at="2022-02-19T18:51:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuitWindows -->
        <test-method status="PASS" signature="AfterTestMethod()[pri:0, instance:Login.Login_Test@7085bdee]" name="AfterTestMethod" is-config="true" duration-ms="25" started-at="2022-02-19T18:51:55 IST" finished-at="2022-02-19T18:51:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTestMethod -->
      </class> <!-- Login.Login_Test -->
    </test> <!-- Regression suite 1 -->
  </suite> <!-- example suite 1 -->
</testng-results>
